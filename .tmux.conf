# .tmux.conf of deanbodenham, based on others (see below)
# last modified: 7 July 2019
# Using tmux 2.6, after 18 Oct 2015
#
## This tmux.conf is based on:
#check out this page for a tmux conf (basis for this one):
#http://www.hamvocke.com/blog/a-guide-to-customizing-your-tmux-conf/
#
#thanks to dothebarbwa
#https://www.reddit.com/r/unixporn/comments/3cn5gi/tmux_is_my_wm_on_os_x/
#with my own modifications
#
#Remember: prefix-? shows all keybindings

#Priority: prefix key and reloading tmux.conf:
#-------------------------------------------------------#
#change prefix from C-b to C-a
unbind C-b 
set -g prefix C-a  

#bind C-a C-a to 'home', or start of line, which was C-a previously
bind C-a send-prefix

#reload tmux.conf message
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

#-------------------------------------------------------#

#Create R development environment with multiple windows
#-------------------------------------------------------#
#start off by renaming current window to R, then split, etc
# bind F4 \\
#          select-window -t :1 \\;\\
#          rename-window 'R' \\;\\
#          split-window -h -c '#{pane_current_path}' \\;\\
#          new-window -c '#{pane_current_path}' \\;\\
#          rename-window 'scripts' \\;\\
#          new-window -c '#{pane_current_path}' \\;\\
#          rename-window 'git' \\;\\
#          new-window -c '#{pane_current_path}' \\;\\
#          rename-window 'tests' \\;\\
#          select-window -t :=1 \\;\\
#          display "R development environment created"


#-------------------------------------------------------#


#Pane navigation non-standard because of resizing pane prefix-L
#-------------------------------------------------------#
bind -r b previous-window
bind -r n next-window
bind -r p last-window

#-------------------------------------------------------#



#Terminal admin:
#-------------------------------------------------------#
#set mouse off/on - if off, forces you to use keyboard with prefix-[
#set -g mouse off
set -g mouse on

# start with window 1 (instead of 0)
set -g base-index 1

# start with pane 1
set -g pane-base-index 1

# use vi mode - not sure what these do...
setw -g mode-keys vi
set -g status-keys vi
#setw -g utf8 on
#set -g status-utf8 on
#-------------------------------------------------------#

#PANE COLOURS
#-------------------------------------------------------#
# set inactive/active window styles
set -g window-style 'fg=colour247,bg=colour236'
set -g window-active-style 'fg=colour250,bg=black'

#pane border
set -g pane-border-style bg=colour235,fg=colour238
set -g pane-active-border-style bg=colour236,fg=colour51
#set -g pan
#-------------------------------------------------------#


#-------------------------------------------------------#
#PANE NAVIGATION/MANAGEMENT
#-------------------------------------------------------#
# splitting panes
#bind \\ split-window -h
#bind - split-window -v
bind \\ split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'

# open new panes in current path
bind c new-window -c '#{pane_current_path}'

# Use Alt-arrow keys WITHOUT PREFIX KEY to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

#Resizing panes:
bind -r j resize-pane -D 2
bind -r k resize-pane -U 2
bind -r h resize-pane -L 2
bind -r l resize-pane -R 2
#-------------------------------------------------------#


#-------------------------------------------------------#
#Pane copy/pasting
#http://jasonwryan.com/blog/2011/06/07/copy-and-paste-in-tmux/
#-------------------------------------------------------#
#unbind [
#bind Escape copy-mode
bind C-v paste-buffer
#bind-key -t vi-copy 'v' begin-selection
#bind-key -t vi-copy 'y' copy-selection
#-------------------------------------------------------#



#-------------------------------------------------------#
#Setting escape time delay to be smaller 
#to make tmux more responsive to commands
#-------------------------------------------------------#
set -s escape-time 1

#-------------------------------------------------------#



#-------------------------------------------------------#
##STATUS LINE/MESSAGES AT BOTTOM
#-------------------------------------------------------#

# Set background of status line to black
#-------------------------------------------------------#
#set -g status-bg blue
set -g status-bg black


#Colours for messages
#-------------------------------------------------------#
# enable activity alerts
setw -g monitor-activity on
set -g visual-activity on

#Show reloaded message in bright white 
# set -g message-fg white
# set -g message-bg default
# set -g message-attr bright
set -g message-style bg=default,fg=white,bright
#-------------------------------------------------------#



# Status line left side
#-------------------------------------------------------#
# Session: 0 1 1 settings
set -g status-left-length 40 
set -g status-left "#[fg=colour245] #S #[fg=colour84]#I #[fg=colour75]#P"
#-------------------------------------------------------#


#Window/pane type in centre
#-------------------------------------------------------#
#move bash* to centre
set -g status-justify centre

# set the color of the window list
# The name of the pane
# setw -g window-status-fg colour75
# setw -g window-status-bg default 
# setw -g window-status-attr dim
set -g window-status-style bg=default,fg=colour75,dim
#-------------------------------------------------------#


#Time and date on right-hand side
#-------------------------------------------------------#
# Status line right side
# 15% | 28 Nov 18:15
# e.g.  28 Nov 18:15
set -g status-right "#[fg=colour245]%d %b #[fg=colour256] %R"

# Update the status bar every sixty seconds
# For the time
set -g status-interval 60
#-------------------------------------------------------#


#-------------------------------------------------------#
#End of status line messages
#-------------------------------------------------------#



#-------------------------------------------------------#
#tmux resurrect
#https://github.com/tmux-plugins/tmux-resurrect
# tmux resurrect keys:
#    prefix + Ctrl-s - save
#    prefix + Ctrl-r - restore
# tmux resurrect folder:
# ~/.tmux/resurrect
#-------------------------------------------------------#
#activate tmux-resurrect
#set-environment -g PATH "/usr/local/bin:/bin:/usr/bin"
#run-shell ~/build/tmux-resurrect/resurrect.tmux
##
###resurrect pane contents
###https://github.com/tmux-plugins/tmux-resurrect/blob/master/docs/restoring_pane_contents.md
#set -g @resurrect-capture-pane-contents 'on'
##
##
###change defaults for resurrect (two steps)
###1. unbind the current defaults C-s and C-r
#unbind-key -T prefix C-s
#unbind-key -T prefix C-r
##   
###2. Still use prefix C-s and C-r, but now ask for (y/n) response before saving/restoring.
###This assumes tmux-resurrect is saved to ~/build/tmux-resurrect folder
#bind-key -T prefix C-s confirm-before -p 'Save this tmux session? (y/n)' 'run-shell ~/build/tmux/tmux-resurrect/scripts/save.sh'
#bind-key -T prefix C-r confirm-before -p 'Resurrect last tmux session? (y/n)' 'run-shell ~/build/tmux/tmux-resurrect/scripts/restore.sh'
#
#-------------------------------------------------------#
#end of tmux resurrect
#-------------------------------------------------------#




#-------------------------------------------------------#
#NOTE:
#reattach-to-user-namespace must be installed
# On OSX, use:
#brew install reattach-to-user-namespace
#
#For opening Skim (and perhaps for copy/pasting)
#http://www.economyofeffort.com/2013/07/29/reattach-to-user-namespace-the-fix-for-your-tmux-in-os-x-woes/
#also have:
set-option -g default-command "reattach-to-user-namespace -l ${SHELL}"
#in ~/.tmux-osx.conf
#-------------------------------------------------------#
if-shell 'test "$(uname)" = "Darwin"' 'source ~/.tmux-osx.conf'
#-------------------------------------------------------#


#=========================================================
#LaTeX Additions
#=========================================================
# F9 in tmux latex will
# 1) save the tex file
# 2) split window
# 3) clear screen
# 4) search for the most recently modified tex file and 
# save in variable $thistexfile
# 5, 6, 7) save name for swp file
# 8) rm swp file (to avoid errors when latex compile finds an error
# 9) compile and exit IF SUCCESSFUL
# otherwise type 'x'


#for pdflatex use F6
#if no swap file in vim, using the following line in vimrc:
#    set noswapfile
# then this will work
bind-key -n F6 send-keys Escape :w C-m \; split-window -v -p 20 -c '#{pane_current_path}' \; send-keys clear C-m\; send-keys 'thistexfile=$(ls -1t *.tex | head -1)' C-m \; send-keys 'pdflatex $thistexfile && exit' C-m 

#if there are swap files, then use this:
#bind-key -n F6 send-keys Escape :w C-m \; split-window -v -p 20 -c '#{pane_current_path}'\; send-keys clear C-m\; send-keys 'thistexfile=$(ls -1t *.tex | head -1)' C-m \; send-keys 'swppre=.' C-m \; send-keys 'swpext=.swp' C-m \; send-keys 'swpfile=$swppre$thistexfile$swpext' C-m \; send-keys 'rm $swpfile' C-m \; send-keys 'pdflatex $thistexfile && exit' C-m 


#for xelatex use F5
bind-key -n F5 send-keys Escape :w C-m \; split-window -v -p 20 -c '#{pane_current_path}' \; send-keys clear C-m\; send-keys 'thistexfile=$(ls -1t *.tex | head -1)' C-m \; send-keys 'xelatex $thistexfile && exit' C-m 


#for masterfile use F7, 
#if main file is main.tex, then there create an (empty) file: main.text.latexmaster 
#if no .latexmaster file, then nothing happens
#bind-key -n F7 send-keys Escape :w C-m \; split-window -v -p 20  -c '#{pane_current_path}' \; send-keys 'thistexfile=$(ls -1t *.tex | head -1)' C-m \; send-keys 'mastertexfile=$(ls -1t *.latexmaster | head -1)' C-m \; send-keys 'echo $mastertexfile' C-m  \; send-keys clear C-m \; send-keys 'texfiletocompile=`echo $mastertexfile | sed -E ' \; send-keys "'s/(.*).latexmaster(.*)/\\1/'`" C-m  \; send-keys 'if [ -z "$texfiletocompile" ] ; then exit ;  else pdflatex $texfiletocompile && exit; fi' C-m
#extra C-m does not help
#; send-keys C-m
bind -n F7 run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux split-window -v -p 20  -c '#{pane_current_path}' && tmux send-keys C-m && tmux send-keys C-m && tmux send-keys 'mastertexfile=$(ls -1t *.latexmaster | head -1)' C-m && tmux send-keys C-m && tmux send-keys C-m  && tmux send-keys 'texfiletocompile=`echo \$mastertexfile | sed -E ' && tmux send-keys \\\'s/\\\(.*\\\).latexmaster\\\(.*\\\)/\\\\1/\\\'\\\` C-m  && tmux send-keys 'if [ -z \\\"\$texfiletocompile\\\" ] \; then exit \; else pdflatex  \$texfiletocompile \&\& exit\; fi' && tmux send-keys C-m ) || tmux send-keys C-m"


#for bibtex use F8
bind-key -n F8 send-keys Escape :w C-m \; split-window -v -p 20 -c '#{pane_current_path}'   \; send-keys 'thistexfile=$(ls -1t *.tex | head -1)' C-m \; send-keys clear C-m \; send-keys 'thisfilebase=`echo $thistexfile | sed -E ' \; send-keys "'s/(.*).tex(.*)/\\1/'`" C-m  \; send-keys 'echo $thisfilebase' C-m \; send-keys 'auxext=.aux' C-m \; send-keys 'thisauxfile=$thisfilebase$auxext' C-m \; send-keys 'echo $thisauxfile' C-m \; send-keys 'bibtex $thisauxfile && exit || printf "\nError while compiling $thisauxfile ; perhaps no .bib file/references for $thistexfile \n\n"' C-m

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

### End of tmux.conf
### Version 7 July 2019

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Solarized theme
set -g @plugin 'seebi/tmux-colors-solarized'
set -g @colors-solarized 'dark'

# Terminal type configuration
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'


